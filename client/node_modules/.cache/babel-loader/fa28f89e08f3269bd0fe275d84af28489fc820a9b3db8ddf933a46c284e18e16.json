{"ast":null,"code":"// Example component where you want to fetch vehicle types based on number of wheels\nimport axios from 'axios';\n\n// Example component where you want to fetch vehicle models based on selected vehicle type\n\nconst fetchVehicle = async vehicleType => {\n  try {\n    const response = await axios.get(`http://localhost:6060/api/vehicle`);\n    return response.data; // Array of vehicle models\n  } catch (error) {\n    console.error('Error fetching vehicle models:', error);\n    return [];\n  }\n};\nconst BookedVehicle = async formData => {\n  try {\n    const response = await axios.post(`http://localhost:6060/api/booking`, formData, {});\n    return response.data; // Array of vehicle models\n  } catch (error) {\n    console.error('Error fetching vehicle models:', error);\n    return [];\n  }\n};\n_c = BookedVehicle;\nexport { fetchVehicle, BookedVehicle };\nvar _c;\n$RefreshReg$(_c, \"BookedVehicle\");","map":{"version":3,"names":["axios","fetchVehicle","vehicleType","response","get","data","error","console","BookedVehicle","formData","post","_c","$RefreshReg$"],"sources":["/home/backend/Music/Car-Booking/client/src/apis/apiCall.js"],"sourcesContent":["// Example component where you want to fetch vehicle types based on number of wheels\nimport axios from 'axios';\n\n\n// Example component where you want to fetch vehicle models based on selected vehicle type\n\nconst fetchVehicle = async (vehicleType) => {\n  try {\n    const response = await axios.get(`http://localhost:6060/api/vehicle`);\n    return response.data; // Array of vehicle models\n  } catch (error) {\n    console.error('Error fetching vehicle models:', error);\n    return [];\n  }\n};\n\nconst  BookedVehicle = async (formData) => {\n  try {\n    \n    const response = await axios.post(`http://localhost:6060/api/booking`,formData,{\n      \n    });\n    return response.data; // Array of vehicle models\n  } catch (error) {\n    console.error('Error fetching vehicle models:', error);\n    return [];\n  }\n};\n\n\nexport  {\n    fetchVehicle,\n    BookedVehicle\n};\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAGzB;;AAEA,MAAMC,YAAY,GAAG,MAAOC,WAAW,IAAK;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,mCAAkC,CAAC;IACrE,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,OAAO,EAAE;EACX;AACF,CAAC;AAED,MAAOE,aAAa,GAAG,MAAOC,QAAQ,IAAK;EACzC,IAAI;IAEF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAAE,mCAAkC,EAACD,QAAQ,EAAC,CAE/E,CAAC,CAAC;IACF,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,OAAO,EAAE;EACX;AACF,CAAC;AAACK,EAAA,GAXKH,aAAa;AAcpB,SACIP,YAAY,EACZO,aAAa;AACf,IAAAG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}