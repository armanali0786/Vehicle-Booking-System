{"ast":null,"code":"var _jsxFileName = \"/home/backend/Music/Car-Booking/client/src/components/DateRangePicker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DateRangePicker } from 'react-date-range';\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\nimport { DateRangePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomDateRangePicker = ({\n  dateRange,\n  onChange\n}) => {\n  _s();\n  const [initialDateRange] = useState([dateRange]);\n  const handleSelect = ranges => {\n    // Check if ranges and range1 are present and valid\n    if (ranges && ranges.range1) {\n      const {\n        startDate,\n        endDate\n      } = ranges.range1;\n      // Validate the start and end dates before proceeding\n      if (startDate && endDate) {\n        // Construct a selection object with startDate and endDate\n        const selection = {\n          startDate,\n          endDate\n        };\n        // Call onChange with the selection object\n        onChange(selection);\n      } else {\n        console.warn('Invalid start or end date:', startDate, endDate);\n      }\n    } else {\n      console.warn('Invalid ranges or range1:', ranges);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-medium mb-2\",\n      children: \"Select Date Range:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DateRangePicker, {\n      ranges: initialDateRange,\n      onChange: handleSelect,\n      months: 2,\n      direction: \"horizontal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomDateRangePicker, \"/+nwelNNKq9WHfchGkzDbUx2NmE=\");\n_c = CustomDateRangePicker;\nexport default CustomDateRangePicker;\nvar _c;\n$RefreshReg$(_c, \"CustomDateRangePicker\");","map":{"version":3,"names":["React","useState","DateRangePicker","DateRangePickerComponent","jsxDEV","_jsxDEV","CustomDateRangePicker","dateRange","onChange","_s","initialDateRange","handleSelect","ranges","range1","startDate","endDate","selection","console","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","months","direction","_c","$RefreshReg$"],"sources":["/home/backend/Music/Car-Booking/client/src/components/DateRangePicker.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { DateRangePicker } from 'react-date-range';\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\nimport { DateRangePickerComponent } from '@syncfusion/ej2-react-calendars';\n\nconst CustomDateRangePicker = ({ dateRange, onChange }) => {\n  const [initialDateRange] = useState([dateRange]);\n\n  const handleSelect = (ranges) => {\n    // Check if ranges and range1 are present and valid\n    if (ranges && ranges.range1) {\n      const { startDate, endDate } = ranges.range1;\n      // Validate the start and end dates before proceeding\n      if (startDate && endDate) {\n        // Construct a selection object with startDate and endDate\n        const selection = {\n          startDate,\n          endDate\n        };\n        // Call onChange with the selection object\n        onChange(selection);\n      } else {\n        console.warn('Invalid start or end date:', startDate, endDate);\n      }\n    } else {\n      console.warn('Invalid ranges or range1:', ranges);\n    }\n  };\n  \n  \n  \n\n  return (\n    <div className=\"mb-4\">\n      <h3 className=\"text-lg font-medium mb-2\">Select Date Range:</h3>\n      <DateRangePicker\n        ranges={initialDateRange}\n        onChange={handleSelect}\n        months={2}\n        direction=\"horizontal\"\n      />\n    </div>\n  );\n};\n\nexport default CustomDateRangePicker;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,QAAQ,kBAAkB;AAClD,OAAO,kCAAkC;AACzC,OAAO,yCAAyC;AAChD,SAASC,wBAAwB,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3E,MAAMC,qBAAqB,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,CAACM,SAAS,CAAC,CAAC;EAEhD,MAAMI,YAAY,GAAIC,MAAM,IAAK;IAC/B;IACA,IAAIA,MAAM,IAAIA,MAAM,CAACC,MAAM,EAAE;MAC3B,MAAM;QAAEC,SAAS;QAAEC;MAAQ,CAAC,GAAGH,MAAM,CAACC,MAAM;MAC5C;MACA,IAAIC,SAAS,IAAIC,OAAO,EAAE;QACxB;QACA,MAAMC,SAAS,GAAG;UAChBF,SAAS;UACTC;QACF,CAAC;QACD;QACAP,QAAQ,CAACQ,SAAS,CAAC;MACrB,CAAC,MAAM;QACLC,OAAO,CAACC,IAAI,CAAC,4BAA4B,EAAEJ,SAAS,EAAEC,OAAO,CAAC;MAChE;IACF,CAAC,MAAM;MACLE,OAAO,CAACC,IAAI,CAAC,2BAA2B,EAAEN,MAAM,CAAC;IACnD;EACF,CAAC;EAKD,oBACEP,OAAA;IAAKc,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBf,OAAA;MAAIc,SAAS,EAAC,0BAA0B;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChEnB,OAAA,CAACH,eAAe;MACdU,MAAM,EAAEF,gBAAiB;MACzBF,QAAQ,EAAEG,YAAa;MACvBc,MAAM,EAAE,CAAE;MACVC,SAAS,EAAC;IAAY;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CAtCIH,qBAAqB;AAAAqB,EAAA,GAArBrB,qBAAqB;AAwC3B,eAAeA,qBAAqB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}