{"ast":null,"code":"var _jsxFileName = \"/home/backend/Music/Car-Booking/client/src/components/WheelSelection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { RadioGroup, FormControlLabel, Radio } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WheelsSelection = ({\n  formData,\n  setFormData\n}) => {\n  _s();\n  const handleWheelChange = newValue => {\n    setFormData(prevData => ({\n      ...prevData,\n      numberOfWheels: newValue // Update numberOfWheels in formData\n    }));\n  };\n  const [vehicleTypes, setVehicleTypes] = useState([]);\n  const [vehicleModels, setVehicleModels] = useState([]);\n\n  // Function to fetch vehicle types based on number of wheels\n  const fetchVehicleTypes = async numberOfWheels => {\n    try {\n      const response = await axios.get(`/vehicle/types?numberOfWheels=${numberOfWheels}`);\n      setVehicleTypes(response.data);\n    } catch (error) {\n      console.error('Error fetching vehicle types:', error);\n    }\n  };\n\n  // Function to fetch vehicle models based on selected vehicle type\n  // const fetchVehicleModels = async (vehicleTypeId) => {\n  //   try {\n  //     const response = await axios.get(`/vehicle/models?vehicleTypeId=${vehicleTypeId}`);\n  //     setVehicleModels(response.data);\n  //   } catch (error) {\n  //     console.error('Error fetching vehicle models:', error);\n  //   }\n  // };\n\n  // Example usage: Fetch vehicle types when number of wheels changes\n  useEffect(() => {\n    fetchVehicleTypes(x); // Assuming default selection is 2 wheels\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-medium mb-2\",\n      children: \"Select Wheel Type \\uD83D\\uDC47\\uD83C\\uDFFB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n      value: formData.numberOfWheels // Set the value to the numberOfWheels field in formData\n      ,\n      onChange: e => handleWheelChange(e.target.value) // Pass the selected value to handleWheelChange\n      ,\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: \"2\",\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 46\n        }, this),\n        label: \"2 Wheels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: \"4\",\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 46\n        }, this),\n        label: \"4 Wheels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(WheelsSelection, \"+BPL63cTXWOERTTQMCYVUSk4Sqw=\");\n_c = WheelsSelection;\nexport default WheelsSelection;\nvar _c;\n$RefreshReg$(_c, \"WheelsSelection\");","map":{"version":3,"names":["React","useState","useEffect","RadioGroup","FormControlLabel","Radio","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","WheelsSelection","formData","setFormData","_s","handleWheelChange","newValue","prevData","numberOfWheels","vehicleTypes","setVehicleTypes","vehicleModels","setVehicleModels","fetchVehicleTypes","response","get","data","error","console","x","children","className","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","control","label","_c","$RefreshReg$"],"sources":["/home/backend/Music/Car-Booking/client/src/components/WheelSelection.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { RadioGroup, FormControlLabel, Radio } from '@mui/material';\nimport axios from 'axios';\nconst WheelsSelection = ({ formData, setFormData }) => {\n\n  const handleWheelChange = (newValue) => {\n    setFormData((prevData) => ({\n      ...prevData,\n      numberOfWheels: newValue // Update numberOfWheels in formData\n    }));\n  };\n\n\n  const [vehicleTypes, setVehicleTypes] = useState([]);\n  const [vehicleModels, setVehicleModels] = useState([]);\n\n  // Function to fetch vehicle types based on number of wheels\n  const fetchVehicleTypes = async (numberOfWheels) => {\n    try {\n      const response = await axios.get(`/vehicle/types?numberOfWheels=${numberOfWheels}`);\n      setVehicleTypes(response.data);\n    } catch (error) {\n      console.error('Error fetching vehicle types:', error);\n    }\n  };\n\n  // Function to fetch vehicle models based on selected vehicle type\n  // const fetchVehicleModels = async (vehicleTypeId) => {\n  //   try {\n  //     const response = await axios.get(`/vehicle/models?vehicleTypeId=${vehicleTypeId}`);\n  //     setVehicleModels(response.data);\n  //   } catch (error) {\n  //     console.error('Error fetching vehicle models:', error);\n  //   }\n  // };\n\n  // Example usage: Fetch vehicle types when number of wheels changes\n  useEffect(() => {\n    fetchVehicleTypes(x); // Assuming default selection is 2 wheels\n  }, []);\n\n  return (\n    <>\n      <h3 className=\"text-lg font-medium mb-2\">Select Wheel Type üëáüèª</h3>\n\n      <RadioGroup\n        value={formData.numberOfWheels} // Set the value to the numberOfWheels field in formData\n        onChange={(e) => handleWheelChange(e.target.value)} // Pass the selected value to handleWheelChange\n      >\n        <FormControlLabel value=\"2\" control={<Radio />} label=\"2 Wheels\" />\n        <FormControlLabel value=\"4\" control={<Radio />} label=\"4 Wheels\" />\n      </RadioGroup>\n    </>\n  );\n};\n\nexport default WheelsSelection;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC9C,SAASC,UAAU,EAAEC,gBAAgB,EAAEC,KAAK,QAAQ,eAAe;AACnE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC1B,MAAMC,eAAe,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAErD,MAAMC,iBAAiB,GAAIC,QAAQ,IAAK;IACtCH,WAAW,CAAEI,QAAQ,KAAM;MACzB,GAAGA,QAAQ;MACXC,cAAc,EAAEF,QAAQ,CAAC;IAC3B,CAAC,CAAC,CAAC;EACL,CAAC;EAGD,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAMsB,iBAAiB,GAAG,MAAOL,cAAc,IAAK;IAClD,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAE,iCAAgCP,cAAe,EAAC,CAAC;MACnFE,eAAe,CAACI,QAAQ,CAACE,IAAI,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACAzB,SAAS,CAAC,MAAM;IACdqB,iBAAiB,CAACM,CAAC,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACEtB,OAAA;MAAIuB,SAAS,EAAC,0BAA0B;MAAAD,QAAA,EAAC;IAAsB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEpE3B,OAAA,CAACL,UAAU;MACTiC,KAAK,EAAExB,QAAQ,CAACM,cAAe,CAAC;MAAA;MAChCmB,QAAQ,EAAGC,CAAC,IAAKvB,iBAAiB,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAC;MAAA;MAAAN,QAAA,gBAEpDtB,OAAA,CAACJ,gBAAgB;QAACgC,KAAK,EAAC,GAAG;QAACI,OAAO,eAAEhC,OAAA,CAACH,KAAK;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAACM,KAAK,EAAC;MAAU;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnE3B,OAAA,CAACJ,gBAAgB;QAACgC,KAAK,EAAC,GAAG;QAACI,OAAO,eAAEhC,OAAA,CAACH,KAAK;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAACM,KAAK,EAAC;MAAU;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC;EAAA,eACb,CAAC;AAEP,CAAC;AAACrB,EAAA,CAnDIH,eAAe;AAAA+B,EAAA,GAAf/B,eAAe;AAqDrB,eAAeA,eAAe;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}