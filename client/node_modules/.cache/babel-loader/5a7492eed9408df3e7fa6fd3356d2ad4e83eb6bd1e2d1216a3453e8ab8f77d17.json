{"ast":null,"code":"var _jsxFileName = \"/home/backend/Music/Car-Booking/client/src/components/VehicleTypeSelection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { RadioGroup, FormControlLabel, Radio } from '@mui/material';\nimport { fetchVehicleById } from '../apis/apiCall';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VehicleTypeSelection = ({\n  formData,\n  setFormData\n}) => {\n  _s();\n  const {\n    vehicleType\n  } = formData;\n  const [vehicleTypes, setVehicleTypes] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetchVehicleById(); // Fetch vehicle types data\n        setVehicleTypes(response.data); // Set vehicle types in state\n      } catch (error) {\n        console.error('Error fetching vehicle types:', error);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array ensures this runs only once on component mount\n\n  const handleVehicleTypeChange = selectedType => {\n    // Find the selected type object based on the ID\n    const selectedVehicleType = vehicleTypes.find(type => type.id === selectedType);\n\n    // Update formData with the selected vehicleType\n    setFormData(prevData => ({\n      ...prevData,\n      vehicleType: selectedVehicleType // Update vehicleType in formData\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-medium mb-2\",\n      children: \"Select Vehicle Type \\uD83D\\uDC47\\uD83C\\uDFFB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n      value: (vehicleType === null || vehicleType === void 0 ? void 0 : vehicleType.id) || '',\n      onChange: e => handleVehicleTypeChange(parseInt(e.target.value)),\n      children: vehicleTypes.map(type => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: type.id.toString(),\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 22\n        }, this),\n        label: type.name\n      }, type.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(VehicleTypeSelection, \"B3NJoRbbbiwubu8jstrWV/MMzdA=\");\n_c = VehicleTypeSelection;\nexport default VehicleTypeSelection;\nvar _c;\n$RefreshReg$(_c, \"VehicleTypeSelection\");","map":{"version":3,"names":["React","useEffect","useState","RadioGroup","FormControlLabel","Radio","fetchVehicleById","jsxDEV","_jsxDEV","VehicleTypeSelection","formData","setFormData","_s","vehicleType","vehicleTypes","setVehicleTypes","fetchData","response","data","error","console","handleVehicleTypeChange","selectedType","selectedVehicleType","find","type","id","prevData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","parseInt","target","map","toString","control","label","name","_c","$RefreshReg$"],"sources":["/home/backend/Music/Car-Booking/client/src/components/VehicleTypeSelection.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { RadioGroup, FormControlLabel, Radio } from '@mui/material';\nimport { fetchVehicleById } from '../apis/apiCall';\n\nconst VehicleTypeSelection = ({ formData, setFormData }) => {\n  const { vehicleType } = formData;\n  const [vehicleTypes, setVehicleTypes] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetchVehicleById(); // Fetch vehicle types data\n        setVehicleTypes(response.data); // Set vehicle types in state\n      } catch (error) {\n        console.error('Error fetching vehicle types:', error);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array ensures this runs only once on component mount\n\n  const handleVehicleTypeChange = (selectedType) => {\n    // Find the selected type object based on the ID\n    const selectedVehicleType = vehicleTypes.find((type) => type.id === selectedType);\n\n    // Update formData with the selected vehicleType\n    setFormData((prevData) => ({\n      ...prevData,\n      vehicleType: selectedVehicleType // Update vehicleType in formData\n    }));\n  };\n\n  return (\n    <div className=\"mb-4\">\n      <h3 className=\"text-lg font-medium mb-2\">Select Vehicle Type üëáüèª</h3>\n      <RadioGroup value={vehicleType?.id || ''} onChange={(e) => handleVehicleTypeChange(parseInt(e.target.value))}>\n        {vehicleTypes.map((type) => (\n          <FormControlLabel\n            key={type.id}\n            value={type.id.toString()}\n            control={<Radio />}\n            label={type.name}\n          />\n        ))}\n      </RadioGroup>\n    </div>\n  );\n};\n\nexport default VehicleTypeSelection;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,gBAAgB,EAAEC,KAAK,QAAQ,eAAe;AACnE,SAASC,gBAAgB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM;IAAEC;EAAY,CAAC,GAAGH,QAAQ;EAChC,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAC3CS,eAAe,CAACE,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;MAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IACDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMK,uBAAuB,GAAIC,YAAY,IAAK;IAChD;IACA,MAAMC,mBAAmB,GAAGT,YAAY,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,YAAY,CAAC;;IAEjF;IACAX,WAAW,CAAEgB,QAAQ,KAAM;MACzB,GAAGA,QAAQ;MACXd,WAAW,EAAEU,mBAAmB,CAAC;IACnC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACEf,OAAA;IAAKoB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBrB,OAAA;MAAIoB,SAAS,EAAC,0BAA0B;MAAAC,QAAA,EAAC;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtEzB,OAAA,CAACL,UAAU;MAAC+B,KAAK,EAAE,CAAArB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEa,EAAE,KAAI,EAAG;MAACS,QAAQ,EAAGC,CAAC,IAAKf,uBAAuB,CAACgB,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,CAAE;MAAAL,QAAA,EAC1Gf,YAAY,CAACyB,GAAG,CAAEd,IAAI,iBACrBjB,OAAA,CAACJ,gBAAgB;QAEf8B,KAAK,EAAET,IAAI,CAACC,EAAE,CAACc,QAAQ,CAAC,CAAE;QAC1BC,OAAO,eAAEjC,OAAA,CAACH,KAAK;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QACnBS,KAAK,EAAEjB,IAAI,CAACkB;MAAK,GAHZlB,IAAI,CAACC,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACrB,EAAA,CA1CIH,oBAAoB;AAAAmC,EAAA,GAApBnC,oBAAoB;AA4C1B,eAAeA,oBAAoB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}